class ColumnHeads extends React.Component {

	handleClick = (event) => {
		if (event.target.className== "unsorted") {
			var sortType = event.target.id;
			var sortable = event.target.id == "recent" ? document.getElementById("alltime") : document.getElementById("recent");
sortable.className = "unsorted";
			event.target.className = "sorted";
this.props.onSort(sortType);
		}
	};

	render() {
		return (
			<thead>
				<tr>
					<th>#</th>
					<th>Camper Name</th>
					<th className="sorted" id = "recent" onClick={this.handleClick}>
						Points in past 30 days
					</th>
					<th className="unsorted" id = "alltime" onClick={this.handleClick}>
						All time points
					</th>
				</tr>
			</thead>
		);
	}
}

class TableBody extends React.Component {
	render() {
		var userList = this.props.users.map((camper, number) => {
			return (
				<tr className="tableBody">
					<td>{number + 1}</td>
					<td>
						<img src={camper.img} className="userImg" />
						&nbsp; {camper.username}
					</td>
					<td>{camper.recent}</td>
					<td>{camper.alltime}</td>
				</tr>
			);
		});

		return <tbody>{userList}</tbody>;
	}
}

class Parent extends React.Component {
	constructor(props) {
		super(props);
		this.state = {
			users: [],
			sort: "recent"
		};
	}

	getData = () => {
		$.getJSON(
			'https://fcctop100.herokuapp.com/api/fccusers/top/' + this.state.sort,
			this.handleData,
		);
	};
	handleData = data => {
		this.setState({users: data});
	};

	componentDidMount() {
		this.getData();
	}

handleSort = (sortBy) => {

this.setState({sort: sortBy}, this.getData);
}

	render() {
		return (
			<div>
				<div id="tableHead" className="row text-center">
					Leaderboard
				</div>
				<table className="table table-striped table-bordered">
					<ColumnHeads onSort = {this.handleSort}/>
					<TableBody users={this.state.users} />
				</table>
			</div>
		);
	}
}

ReactDOM.render(<Parent />, document.getElementById('main'));
